function Miwow(boxClass) {
   this.defaultHeight = window.innerHeight;
   this.instanceMap = [];
   this.boxClass = boxClass;
   this.box = document.querySelector(boxClass);
}

/**
 * 初始化
 */
Miwow.prototype.init = function () {
   var instances = document.querySelectorAll(this.boxClass + ' .miwow');
   this.buildMap(instances);
   this.registerListener();
};

/** 
 * 滚动事件
 */
Miwow.prototype.onScroll = function () {
   var box = this.box;
   var scrollTop = box.scrollTop;
   var instanceMap = this.instanceMap;
   var i;
   for (i = 0; i < instanceMap.length; i++) {
      var instance = instanceMap[i];
      var node = instance.node;
      var miwowOffset = node.dataset.miwowOffset;
      var border = scrollTop + this.defaultHeight + (miwowOffset ? miwowOffset : 0);
      if (instance.y >= scrollTop - instance.height && instance.y <= border) {
         node.style.visible = 'visible';
         node.classList.add(instance.animationName);
      }
      if (instance.y < scrollTop - instance.height || instance.y > border) {
         node.style.visible = 'hidden';
         node.classList.remove(instance.animationName);
      }
   }
   i = null;
};

/** 
 * 注册监听器
 */
Miwow.prototype.registerListener = function () {
   var box = this.box;
   box.addEventListener('scroll', this.onScroll.bind(this));
};

/**
 * 构建map
 */
Miwow.prototype.buildMap = function (instances) {
   for (var i = 0; i < instances.length; i++) {
      var node = instances[i];
      var offset = {
         y: 0
      };
      this.computeOffsetWithParent(offset, node);
      var data = node.dataset;
      data.miwowDuration ? (node.style.animationDuration = data.miwowDuration) : node.style.animationDuration = 1;
      data.miwowDelay ? (node.style.animationDelay = data.miwowDelay) : node.style.animationDelay = 0;
      node.style.animationFillMode = 'both';
      var animationName = this.findAnimationClass(node);
      if (offset.y > (data.miwowOffset ? (this.defaultHeight + data.miwowOffset) : this.defaultHeight)) {
         node.style.visible = 'hidden';
         node.classList.remove(animationName);
      }
      this.instanceMap.push({
         y: offset.y,
         node: node,
         animationName: animationName,
         height: node.clientHeight
      });
   }
};

/**
 * 查找animation类名
 */
Miwow.prototype.findAnimationClass = function (node) {
   var classList = node.classList;
   for (var i = 0; i < classList.length; i++) {
      if (classList[i].indexOf("In") > -1) {
         return classList[i];
      }
   }
};

/**
 * 向上遍历获取坐标
 */
Miwow.prototype.computeOffsetWithParent = function (offset, node) {
   var top = node.offsetTop;
   top && (offset.y += top);
   node.offsetParent && this.computeOffsetWithParent(offset, node.offsetParent);
};

/**
 * 释放处理
 */
Miwow.prototype.dispose = function () {
   this.instanceMap = null;
   var box = this.box;
   box.removeEventListener('scroll', this.onScroll);
};